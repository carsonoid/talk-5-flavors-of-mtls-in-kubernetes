# 5 Flavors of mTLS in Kubernetes
We can do it!

Carson Anderson
DevX-O, Weave
@carson_ops

https://github.com/carsonoid/5-flavors-of-mtls-in-kubernetes

## Foundations of TLS

## Why mTLS?

## How?

## Flavor 0: No TLS

## HTTP Server Code

.code cmd/insecure-server/main.go /^func main\(\) \{/,/^\}/

## HTTP Client Code

.code cmd/insecure-client/main.go  /^func main\(\) \{/,/^\}/

## Code Demo

.code cmd/demo/simple.sh  /START DEMO OMIT/,/END DEMO OMIT/

.play cmd/demo/simple.go /START OMIT/,/END OMIT/

## Flavor 0: No TLS - Kubernetes

## HTTP Server Deployment

.code mtls/0-none/server-k8s.yaml /^# Deployment/,/# .../

## HTTP Server Deployment - Simple!

We can simply run the server process, nothing extra is required

.code mtls/0-none/server-k8s.yaml /START FOCUS OMIT/,/END FOCUS OMIT/

## HTTP Client Deployment

.code mtls/0-none/client-k8s.yaml

.code mtls/0-none/cluster-up.sh /k3d cluster create/,/kubetail/

.play mtls/0-none/present.go /START OMIT/,/END OMIT/

## Flavor 1: Manual mTLS

## HTTPS Server

.code cmd/insecure-server/main.go /^func main\(\) \{/,/^\}/

## HTTPS Client

.code cmd/insecure-client/main.go /^func main\(\) \{/,/^\}/

## Flavor 2: Cert-Manager mTLS by Hand

## Flavor 3: Cert-Manager mTLS via CSI

## Flavor 4: mTLS via A Service Mesh

<!-- .play examples/ugly.go /START OMIT/,/END OMIT/ -->
